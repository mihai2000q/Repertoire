name: Deploy 🚀

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  deploy-server:
    runs-on: ubuntu-latest
    name: Server 🤖
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Publish Docker Image
      uses: docker/build-push-action@v6
      with:
        context: repertoire.server/
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/repertoire-server:latest
        build-args: SERVER_PORT=8000

  deploy-storage:
    runs-on: ubuntu-latest
    name: Storage 💾
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Publish Docker Image
      uses: docker/build-push-action@v6
      with:
        context: repertoire.storage/
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/repertoire-storage:latest
        build-args: SERVER_PORT=8020

  deploy-desktop:
    runs-on: windows-latest
    name: Desktop 🖥️
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Extract version from package.json
        working-directory: repertoire.desktop/
        run: |
          VERSION=$(awk -F'[":,]' '/"version"/ {gsub(/^[ \t]+|[ \t]+$/, "", $3); print $3}' package.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Setup Environment Variables
        working-directory: repertoire.desktop/
        run: cp .env.prod .env
        env:
          VITE_BACKEND_URL: ${{ secrets.BACKEND_URL }}

      - name: Install Dependencies
        working-directory: repertoire.desktop/
        run: npm ci

      - name: Build
        working-directory: repertoire.desktop/
        run: npm run build:win

      - name: Create Release and Upload App on Assets
        uses: ncipollo/release-action@v1
        with:
          tag: v$VERSION
          name: Release v$VERSION
          body: |
            Release notes for the new version of Repertoire:
          draft: false
          prerelease: false
          files: |
            repertoire.desktop/dist/*.exe
