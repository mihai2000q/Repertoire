name: repertoire
services:
  server:
    build: 
      context: .
      args:
        SERVER_PORT: ${SERVER_PORT}
    container_name: Repertoire-Server
    env_file: ".env"
    environment:
      - IS_RUNNING_IN_CONTAINER=true
      - SERVER_HOST=0.0.0.0
      - DB_HOST=Repertoire-Database
      - DB_PORT=5432
      - AUTH_STORAGE_URL=http://Repertoire-Storage:8020/oauth/token
      - UPLOAD_STORAGE_URL=http://Repertoire-Storage:8020/storage
      - MEILI_URL=http://Repertoire-Meilisearch:7700
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    depends_on:
      database:
        condition: service_healthy

  database:
    image: "postgres:17"
    container_name: Repertoire-Database
    ports:
      - "${DB_PORT}:5432"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./.sample-data:/.sample-data
      - ./.temp/postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  meilisearch:
    image: "getmeili/meilisearch:v1.13.0"
    container_name: Repertoire-Meilisearch
    ports:
      - "${MEILI_PORT}:7700"
    environment:
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY}
    volumes:
      - ./.temp/meili_data:/meili_data